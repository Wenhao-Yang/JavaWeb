<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须对应接口的路径，类似该xml配置文件是该接口的"实现类"-->
<mapper namespace="com.ssm.dao.IUsersMapper">
    <!-- 实体类对象和mysql表的对应关系 
     private int uid,uage,money;
   private String uname,upwd,udate,context;-->
   
    <resultMap id="UserResults" type="com.ssm.entity.User">
     <id column="uid" property="uid" jdbcType="INTEGER" javaType="Integer" />        
     <result column="uage" property="uage" jdbcType="INTEGER" javaType="Integer" />
     <result column="money" property="money" jdbcType="INTEGER" javaType="Integer" /> 
     <result column="uname" property="uname" jdbcType="VARCHAR" javaType="string"/> 
     <result column="gender" property="gender" jdbcType="VARCHAR" javaType="string"/> 
     <result column="upwd" property="upwd" jdbcType="VARCHAR" javaType="string"/>  
     <result column="udate" property="udate" jdbcType="VARCHAR" javaType="string"/>
     <result column="context" property="context" jdbcType="VARCHAR" javaType="string"/>             
    </resultMap>      
   
  
   <!-- public User SelectUserByLogin(String uname,String upwd); 
   <select id="SelectUserByLogin" id属性一定要和接口名一致，相似的理解<select>是接口方法名对应的方法体
   #{2}：就是赋值的第二个参数-->
    <select id="SelectUserByLogin" resultMap="UserResults"
     parameterType="String">
      SELECT * from users where uname=#{0} and upwd=#{1};
    </select>
    <!-- 
    <select id="SelectUserByLogin1" resultMap="UserResults"
     parameterType="String">
      SELECT * from users where uname=#{0} and upwd=#{1};
    </select> -->
    <select id="SelectUserAll" resultMap="UserResults">
    	SELECT * from users order by udate desc;
    </select>
    <select id="SelectUserByUid" resultMap="UserResults">
    	SELECT * FROM users where uid=#{0};
    </select>
    <insert id="InsertUser" parameterType="com.ssm.entity.User">
    	INSERT INTO users(uname,upwd,gender,age,money,udate,context) 
    	VALUES(#{uname},#{upwd},#{gender},#{age},400000,NOW(),"");
    </insert>
    
    <update id="UpdateUser" parameterType="com.ssm.entity.User">
    	UPDATE users SET age=#{age},udate=now(),uname=#{uname}, upwd=#{upwd},context=#{context} WHERE uid=#{uid}
    </update>
    <delete id="DeleteUser" >
    	DELETE FROM users where uid=#{0};
    </delete>
    
    
   
</mapper>
